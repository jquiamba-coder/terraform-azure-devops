trigger:
  - main  # Run the pipeline when changes are pushed to the main branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_VERSION: '1.6.0'
  AZURE_SUBSCRIPTION: '68013f73-ff8b-4a58-a1c4-67fb285c8c95'

stages:
  - stage: Terraform_Deploy
    displayName: "Terraform Deployment"
    jobs:
      - job: Terraform
        displayName: "Run Terraform"
        pool:
          vmImage: 'ubuntu-latest'
        steps:

          # Step 1: Install Terraform
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: $(TF_VERSION)

          # Step 2: Authenticate with Azure using Federated Credential
          - task: AzureCLI@2
            displayName: "Login to Azure using Federated Credentials"
            inputs:
              azureSubscription: 'terraform-pipeline'  # Your service connection
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Display the account info to verify the login
                echo "Authenticated to Azure with account:"
                az account show --query "{Name: name, TenantId: tenantId, SubscriptionId: id}"

                # Ensure the correct subscription is set
                az account set --subscription $(AZURE_SUBSCRIPTION)

          # Step 3: Initialize Terraform and Upgrade Dependencies
          - script: |
              terraform init -upgrade \
                -backend-config="resource_group_name=terraform-backend-rg" \
                -backend-config="storage_account_name=mytfstatestoragejq0714" \
                -backend-config="container_name=tfstate" \
                -backend-config="key=terraform.tfstate"
            displayName: "Terraform Init"
            workingDirectory: 'infra/terraform'

          # Step 4: Generate Terraform Plan
          - script: |
              terraform plan -out=tfplan
            displayName: "Terraform Plan"
            workingDirectory: 'infra/terraform'

          # Step 5: Upload .terraform.lock.hcl & tfplan as Artifacts
          - task: PublishPipelineArtifact@1
            displayName: "Upload Terraform Lock File and Plan"
            inputs:
              targetPath: 'infra/terraform/.terraform.lock.hcl'
              artifact: 'terraform-lockfile'

          - task: PublishPipelineArtifact@1
            displayName: "Upload tfplan"
            inputs:
              targetPath: 'infra/terraform/tfplan'
              artifact: 'tfplan'

      - job: Manual_Approval
        displayName: "Approve Terraform Apply"
        dependsOn: Terraform
        pool: server
        steps:
          - task: ManualValidation@1
            displayName: "Approve Terraform Apply"
            inputs:
              notifyUsers: "jlsryn.quiambao@gmail.com"
              instructions: "Review Terraform plan before applying."

      - job: Terraform_Apply
        displayName: "Terraform Apply"
        dependsOn: Manual_Approval
        pool:
          vmImage: 'ubuntu-latest'
        steps:

          # Step 6: Install Terraform (Same Version)
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: $(TF_VERSION)

          # Step 7: Download .terraform.lock.hcl & tfplan
          - task: DownloadPipelineArtifact@2
            displayName: "Download Terraform Lock File"
            inputs:
              artifact: 'terraform-lockfile'
              path: 'infra/terraform'

          - task: DownloadPipelineArtifact@2
            displayName: "Download tfplan"
            inputs:
              artifact: 'tfplan'
              path: 'infra/terraform'

          # Step 8: Reinitialize Terraform with Correct Dependencies
          - script: |
              terraform init -upgrade
            displayName: "Reinitialize Terraform"
            workingDirectory: 'infra/terraform'

          # Step 9: Apply Terraform Plan
          - script: |
              terraform apply -auto-approve tfplan
            displayName: "Terraform Apply"
            workingDirectory: 'infra/terraform'
