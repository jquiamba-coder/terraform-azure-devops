trigger:
  - main

stages:
  - stage: Terraform_Dev
    displayName: "Terraform Plan for Dev"
    jobs:
      - job: Plan_Dev
        displayName: "Terraform Init & Plan"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'

          - script: |
              echo "ARM_CLIENT_ID: ${#ARM_CLIENT_ID} characters long"
    	      echo "ARM_TENANT_ID: ${#ARM_TENANT_ID} characters long"
              displayName: "Debug: Check Variable Lengths"

          - task: AzureCLI@2
            displayName: "Azure CLI Login"
            inputs:
              azureSubscription: "azure-terraform-connection"
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_TENANT_ID: $(ARM_TENANT_ID)  

          - script: |
              terraform init -reconfigure
              terraform workspace new dev || terraform workspace select dev
              terraform plan -var="resource_group_name=dev-rg"
            displayName: "Terraform Init & Plan (Dev)"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_USE_OIDC: "true"

  - stage: Terraform_Staging
    displayName: "Terraform Plan for Staging"
    dependsOn: Terraform_Dev
    condition: succeeded()
    jobs:
      - job: Plan_Staging
        displayName: "Terraform Init & Plan"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              terraform init
              terraform workspace new staging || terraform workspace select staging
              terraform plan -var="resource_group_name=staging-rg"
            displayName: "Terraform Init & Plan (Staging)"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_USE_OIDC: "true"

  - stage: Terraform_Staging_Apply
    displayName: "Terraform Apply for Staging"
    dependsOn: Terraform_Staging
    condition: succeeded()
    jobs:
      - job: Apply_Staging
        displayName: "Terraform Apply"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              terraform apply -auto-approve
            displayName: "Terraform Apply (Staging)"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_USE_OIDC: "true"

  - stage: Terraform_Prod
    displayName: "Terraform Plan for Production"
    dependsOn: Terraform_Staging_Apply
    condition: succeeded()
    jobs:
      - job: Plan_Prod
        displayName: "Terraform Init & Plan"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              terraform init
              terraform workspace new prod || terraform workspace select prod
              terraform plan -var="resource_group_name=prod-rg"
            displayName: "Terraform Init & Plan (Prod)"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_USE_OIDC: "true"

  - stage: Terraform_Prod_Apply
    displayName: "Terraform Apply for Production"
    dependsOn: Terraform_Prod
    condition: succeeded()
    jobs:
      - job: Apply_Prod
        displayName: "Terraform Apply"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              terraform apply -auto-approve
            displayName: "Terraform Apply (Production)"
            env:
              ARM_CLIENT_ID: "$(ARM_CLIENT_ID)"
              ARM_TENANT_ID: "$(ARM_TENANT_ID)"
              ARM_SUBSCRIPTION_ID: "$(ARM_SUBSCRIPTION_ID)"
              ARM_USE_OIDC: "true"

